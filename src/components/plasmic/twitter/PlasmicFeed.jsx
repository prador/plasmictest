// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: v3r5FjeHwUDiayAfitwffE
// Component: 71PMMyppNz0uA
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import ActionButton from "../../ActionButton"; // plasmic-import: NASyORUGBEVIc/component
import Spacer from "../../Spacer"; // plasmic-import: 5UYP7jjjwlUklV/component
import Avatar from "../../Avatar"; // plasmic-import: ZJMIeo5BqZDP_/component
import Button from "../../Button"; // plasmic-import: 9_2TomNy2in1dV/component
import Tweet from "../../Tweet"; // plasmic-import: kXtaoaFrcWdiP/component
import SideSection from "../../SideSection"; // plasmic-import: 7z0ezgcPx3-n0n/component
import Trend from "../../Trend"; // plasmic-import: WuNoJCHhbEyBYe/component
import Suggestion from "../../Suggestion"; // plasmic-import: FePYc5ZNICg1Lo/component
import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: Dr5Nf8Lf7WhDR6/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_twitter.module.css"; // plasmic-import: v3r5FjeHwUDiayAfitwffE/projectcss
import * as sty from "./PlasmicFeed.module.css"; // plasmic-import: 71PMMyppNz0uA/css
import MagicIcon from "./icons/PlasmicIcon__Magic"; // plasmic-import: XPJTPP79FEtoTn/icon
import TwitterIcon from "./icons/PlasmicIcon__Twitter"; // plasmic-import: Cok2nnasw1ohzL/icon
import HomeActiveIcon from "./icons/PlasmicIcon__HomeActive"; // plasmic-import: WXJ5GcGgCx_53v/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: RM2MTEch92WyuG/icon
import NotificationsIcon from "./icons/PlasmicIcon__Notifications"; // plasmic-import: xHu7lC2QPc_aeD/icon
import MessagesIcon from "./icons/PlasmicIcon__Messages"; // plasmic-import: wTV3T5GppdmA9S/icon
import BookmarksIcon from "./icons/PlasmicIcon__Bookmarks"; // plasmic-import: qS3--6UA_PmJGD/icon
import ListsIcon from "./icons/PlasmicIcon__Lists"; // plasmic-import: gEBCdm3uGfDIcW/icon
import ProfileIcon from "./icons/PlasmicIcon__Profile"; // plasmic-import: QERWxK6JImLtE6/icon
import MoreIcon from "./icons/PlasmicIcon__More"; // plasmic-import: JI3Sw7us2ehXiL/icon
import PictureIcon from "./icons/PlasmicIcon__Picture"; // plasmic-import: g-Eyj2_BShlF1O/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: 7PDiVvX14hqjk5/icon
import Icon4Icon from "./icons/PlasmicIcon__Icon4"; // plasmic-import: FOvHmMJxaJyc5Y/icon
import Icon5Icon from "./icons/PlasmicIcon__Icon5"; // plasmic-import: CWIpmSaxD5ntz1/icon
import Icon7Icon from "./icons/PlasmicIcon__Icon7"; // plasmic-import: 3yBNVg2FTg7dyl/icon
import SearchIcon from "./icons/PlasmicIcon__Search"; // plasmic-import: 8i_V4IHLzLQPcd/icon
import image2W7Z332PGftT7L1 from "./images/image2.png"; // plasmic-import: W7Z332PGftT7l1/picture
import image5DMi22Dl8IdZkeC from "./images/image5.png"; // plasmic-import: dMI22DL8IDZkeC/picture
import image4I6DEgQhsA58KO from "./images/image4.png"; // plasmic-import: I6dEgQhsA58k-O/picture
import image7YbhE1XOn3ThkL from "./images/image7.png"; // plasmic-import: YbhE1xOn_3thkL/picture
import image6PhJqNjAqsj9CdL from "./images/image6.png"; // plasmic-import: phJQNjAqsj9cdL/picture
import image8RHFnjvM8TjXQb from "./images/image8.png"; // plasmic-import: rHFnjv-m8TjXQb/picture
import imageW6YyZgUxZLe1P from "./images/image.png"; // plasmic-import: W6yyZgUx-zLe1P/picture

export const PlasmicFeed__VariantProps = new Array();

export const PlasmicFeed__ArgProps = new Array();

function PlasmicFeed__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <React.Fragment>
      <div className={defaultcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={
            hasVariant(globalVariants, "screen", "desktop") ? true : false
          }
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <div className={classNames(defaultcss.all, sty.box__dFbKq)}>
            {(
              hasVariant(globalVariants, "screen", "desktop") ? false : true
            ) ? (
              <div className={classNames(defaultcss.all, sty.box__ryuot)}>
                <div className={classNames(defaultcss.all, sty.box__bQhar)}>
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__emwRm)}
                    role={"img"}
                    src={image2W7Z332PGftT7L1}
                  />
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.box___6Dwav
                  )}
                >
                  {"Home"}
                </div>

                <ActionButton
                  className={classNames(
                    "__wab_instance",
                    sty.actionButton__mpZtj
                  )}
                  options={["medium", "primary"]}
                  slot={"25"}
                >
                  <MagicIcon
                    className={classNames(defaultcss.all, sty.svg__j4ItD)}
                    role={"img"}
                  />
                </ActionButton>
              </div>
            ) : null}
            {(
              hasVariant(globalVariants, "screen", "desktop") ? true : false
            ) ? (
              <div className={classNames(defaultcss.all, sty.box__m35S)}>
                <ActionButton
                  className={classNames(
                    "__wab_instance",
                    sty.actionButton__vxFJk
                  )}
                  options={["primary", "large"]}
                  slot={"25"}
                >
                  <TwitterIcon
                    className={classNames(defaultcss.all, sty.svg__cn56)}
                    role={"img"}
                  />
                </ActionButton>

                <ActionButton
                  className={classNames(
                    "__wab_instance",
                    sty.actionButton__hqRab
                  )}
                  options={["primary", "large"]}
                  slot={"25"}
                >
                  <HomeActiveIcon
                    className={classNames(defaultcss.all, sty.svg__iiAcr)}
                    role={"img"}
                  />
                </ActionButton>

                <ActionButton
                  className={classNames(
                    "__wab_instance",
                    sty.actionButton__iip1X
                  )}
                  options={["large"]}
                  slot={"25"}
                >
                  <Icon2Icon
                    className={classNames(defaultcss.all, sty.svg___0MJk3)}
                    role={"img"}
                  />
                </ActionButton>

                <ActionButton
                  className={classNames(
                    "__wab_instance",
                    sty.actionButton__hNoUn
                  )}
                  options={["large"]}
                  slot={"25"}
                >
                  <NotificationsIcon
                    className={classNames(defaultcss.all, sty.svg___05Lnc)}
                    role={"img"}
                  />
                </ActionButton>

                <ActionButton
                  className={classNames(
                    "__wab_instance",
                    sty.actionButton__fbMh
                  )}
                  options={["large"]}
                  slot={"25"}
                >
                  <MessagesIcon
                    className={classNames(defaultcss.all, sty.svg___8NGa)}
                    role={"img"}
                  />
                </ActionButton>

                <ActionButton
                  className={classNames(
                    "__wab_instance",
                    sty.actionButton__aqmpe
                  )}
                  options={["large"]}
                  slot={"25"}
                >
                  <BookmarksIcon
                    className={classNames(defaultcss.all, sty.svg___54BHg)}
                    role={"img"}
                  />
                </ActionButton>

                <ActionButton
                  className={classNames(
                    "__wab_instance",
                    sty.actionButton___5BGgy
                  )}
                  options={["large"]}
                  slot={"25"}
                >
                  <ListsIcon
                    className={classNames(defaultcss.all, sty.svg__ithup)}
                    role={"img"}
                  />
                </ActionButton>

                <ActionButton
                  className={classNames(
                    "__wab_instance",
                    sty.actionButton__upFsl
                  )}
                  options={["large"]}
                  slot={"25"}
                >
                  <ProfileIcon
                    className={classNames(defaultcss.all, sty.svg__mlDcH)}
                    role={"img"}
                  />
                </ActionButton>

                <ActionButton
                  className={classNames(
                    "__wab_instance",
                    sty.actionButton__aWwk7
                  )}
                  options={["large"]}
                  slot={"25"}
                >
                  <MoreIcon
                    className={classNames(defaultcss.all, sty.svg__wlSqH)}
                    role={"img"}
                  />
                </ActionButton>
              </div>
            ) : null}
          </div>

          <div className={classNames(defaultcss.all, sty.box__a2XZl)}>
            {(
              hasVariant(globalVariants, "screen", "desktop") ? true : false
            ) ? (
              <div className={classNames(defaultcss.all, sty.box__xbHwl)}>
                <div className={classNames(defaultcss.all, sty.box__wjuQ)}>
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box___3UhL
                    )}
                  >
                    {"Home"}
                  </div>

                  <Spacer
                    className={classNames("__wab_instance", sty.spacer__hYwK)}
                  />

                  <ActionButton
                    className={classNames(
                      "__wab_instance",
                      sty.actionButton__omFye
                    )}
                    options={["medium", "primary"]}
                    slot={"25"}
                  >
                    <MagicIcon
                      className={classNames(defaultcss.all, sty.svg__o5Kr2)}
                      role={"img"}
                    />
                  </ActionButton>
                </div>

                <div className={classNames(defaultcss.all, sty.box__hjqDz)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.box__dy9Gr)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.box__hnekg)}
                    >
                      <Avatar
                        data-plasmic-name={"avatar"}
                        data-plasmic-override={overrides.avatar}
                        className={classNames("__wab_instance", sty.avatar)}
                      />
                    </p.Stack>
                  </p.Stack>

                  <div className={classNames(defaultcss.all, sty.box__nxop)}>
                    <textarea
                      data-plasmic-name={"textarea"}
                      data-plasmic-override={overrides.textarea}
                      className={classNames(defaultcss.textarea, sty.textarea)}
                      placeholder={"What's happening?"}
                      rows={1}
                    />

                    <div className={classNames(defaultcss.all, sty.box__jQNd)}>
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.box__yHd2A)}
                      >
                        <ActionButton
                          className={classNames(
                            "__wab_instance",
                            sty.actionButton__i9RRo
                          )}
                          options={["medium", "primary"]}
                          slot={"25"}
                        >
                          <PictureIcon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__wKlHc
                            )}
                            role={"img"}
                          />
                        </ActionButton>

                        <ActionButton
                          className={classNames(
                            "__wab_instance",
                            sty.actionButton__fm67K
                          )}
                          options={["medium", "primary"]}
                          slot={"25"}
                        >
                          <Icon3Icon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__pdC7
                            )}
                            role={"img"}
                          />
                        </ActionButton>

                        <ActionButton
                          className={classNames(
                            "__wab_instance",
                            sty.actionButton___5HaF1
                          )}
                          options={["medium", "primary"]}
                          slot={"25"}
                        >
                          <Icon4Icon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__mv6Sh
                            )}
                            role={"img"}
                          />
                        </ActionButton>

                        <ActionButton
                          className={classNames(
                            "__wab_instance",
                            sty.actionButton__wsu2K
                          )}
                          options={["medium", "primary"]}
                          slot={"25"}
                        >
                          <Icon5Icon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__oDv2J
                            )}
                            role={"img"}
                          />
                        </ActionButton>

                        <ActionButton
                          className={classNames(
                            "__wab_instance",
                            sty.actionButton__xsCet
                          )}
                          options={["medium", "primary"]}
                          slot={"25"}
                        >
                          <Icon7Icon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__sJwdd
                            )}
                            role={"img"}
                          />
                        </ActionButton>
                      </p.Stack>

                      <Spacer
                        className={classNames(
                          "__wab_instance",
                          sty.spacer___2Xk2F
                        )}
                      />

                      <Button
                        data-plasmic-name={"button"}
                        data-plasmic-override={overrides.button}
                        className={classNames("__wab_instance", sty.button)}
                        options={["primary"]}
                      >
                        {"Tweet"}
                      </Button>
                    </div>
                  </div>
                </div>
              </div>
            ) : null}

            <div className={classNames(defaultcss.all, sty.box__jbS9T)}>
              <Tweet
                className={classNames("__wab_instance", sty.tweet__jilm0)}
              />

              <Tweet
                className={classNames("__wab_instance", sty.tweet__niC8V)}
                name={"Cassidy Williams"}
                slot3={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__uef6T)}
                    role={"img"}
                    src={image4I6DEgQhsA58KO}
                  />
                }
                username={"@cassidoo"}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box__nOadN)}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__yQfRt
                    )}
                  >
                    {"A new issue is coming your way, check your inbox!!"}
                  </div>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.box__cqjpQ)}
                  >
                    <img
                      alt={""}
                      className={classNames(defaultcss.img, sty.img__zQHy6)}
                      role={"img"}
                      src={image5DMi22Dl8IdZkeC}
                    />

                    <div className={classNames(defaultcss.all, sty.box__nNvm)}>
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__hcbHn
                        )}
                      >
                        <span>
                          <span style={{ fontWeight: 700 }}>
                            {"rendezvous with cassidoo"}
                          </span>
                        </span>
                      </div>

                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__w6Snj
                        )}
                      >
                        {"probably the best newsletter you'll ever read"}
                      </div>

                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__tw1Ge
                        )}
                      >
                        {"cassidoo.co"}
                      </div>
                    </div>
                  </p.Stack>
                </p.Stack>
              </Tweet>

              <Tweet
                className={classNames("__wab_instance", sty.tweet__pehpB)}
                name={"Max Stoiber"}
                slot3={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__y2Krp)}
                    role={"img"}
                    src={image7YbhE1XOn3ThkL}
                  />
                }
                username={"@mxstbr"}
              >
                {
                  "Tell me you're a React developer without telling me you're a React developer."
                }
              </Tweet>

              <Tweet
                className={classNames("__wab_instance", sty.tweet__fGdE)}
              />

              <Tweet
                className={classNames("__wab_instance", sty.tweet___9ZmE)}
                name={"Cassidy Williams"}
                slot3={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__gnt0L)}
                    role={"img"}
                    src={image4I6DEgQhsA58KO}
                  />
                }
                username={"@cassidoo"}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box__kgcul)}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__tr7Mr
                    )}
                  >
                    {"A new issue is coming your way, check your inbox!!"}
                  </div>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.box__iZiBu)}
                  >
                    <img
                      alt={""}
                      className={classNames(defaultcss.img, sty.img__oEzYk)}
                      role={"img"}
                      src={image5DMi22Dl8IdZkeC}
                    />

                    <div className={classNames(defaultcss.all, sty.box__eUkRo)}>
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__uzi2E
                        )}
                      >
                        <span>
                          <span style={{ fontWeight: 700 }}>
                            {"rendezvous with cassidoo"}
                          </span>
                        </span>
                      </div>

                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__rcYq
                        )}
                      >
                        {"probably the best newsletter you'll ever read"}
                      </div>

                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__r3F6
                        )}
                      >
                        {"cassidoo.co"}
                      </div>
                    </div>
                  </p.Stack>
                </p.Stack>
              </Tweet>

              <Tweet
                className={classNames("__wab_instance", sty.tweet__lSb1N)}
                name={"Max Stoiber"}
                slot3={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__h0QUy)}
                    role={"img"}
                    src={image7YbhE1XOn3ThkL}
                  />
                }
                username={"@mxstbr"}
              >
                {
                  "Tell me you're a React developer without telling me you're a React developer."
                }
              </Tweet>
            </div>
          </div>

          {(hasVariant(globalVariants, "screen", "desktop") ? true : false) ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.box__zqwG)}
            >
              <div className={classNames(defaultcss.all, sty.box__aPkUu)}>
                <div className={classNames(defaultcss.all, sty.box__x8Khq)}>
                  <div className={classNames(defaultcss.all, sty.box__gnYB)}>
                    <SearchIcon
                      className={classNames(defaultcss.all, sty.svg__qpEd1)}
                      role={"img"}
                    />
                  </div>

                  <input
                    data-plasmic-name={"textbox"}
                    data-plasmic-override={overrides.textbox}
                    className={classNames(defaultcss.input, sty.textbox)}
                    placeholder={"Search Twitter"}
                    size={1}
                    type={"text"}
                  />
                </div>
              </div>

              <SideSection
                className={classNames("__wab_instance", sty.sideSection__t5RRo)}
                slot={
                  <React.Fragment>
                    <Trend
                      className={classNames(
                        "__wab_instance",
                        sty.trend___8PrPy
                      )}
                      slot={"Entertainment"}
                    >
                      {"Adele shares photo supporting Beyoncé's Black is King"}
                    </Trend>

                    <Trend
                      className={classNames(
                        "__wab_instance",
                        sty.trend___6GnmN
                      )}
                      slot={"COVID-19"}
                    >
                      {
                        "Thousands march in Berlin to protest COVID-19 restrictions"
                      }
                    </Trend>

                    <Trend
                      className={classNames(
                        "__wab_instance",
                        sty.trend___1EDIr
                      )}
                      slot={"World nenws"}
                    >
                      {
                        "Russia banned from using its name, flag and anthem at the next two Olympic Games"
                      }
                    </Trend>
                  </React.Fragment>
                }
              />

              <SideSection
                className={classNames("__wab_instance", sty.sideSection__ke3MC)}
                slot={
                  <React.Fragment>
                    <Suggestion
                      className={classNames(
                        "__wab_instance",
                        sty.suggestion__r7GbL
                      )}
                      slot={"Mark Dalgleish      "}
                      slot2={"@markdalgleish"}
                    >
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img__ytwHs)}
                        role={"img"}
                        src={image6PhJqNjAqsj9CdL}
                      />
                    </Suggestion>

                    <Suggestion
                      className={classNames(
                        "__wab_instance",
                        sty.suggestion___81BZx
                      )}
                      slot={"Guillermo Rauch  "}
                      slot2={"@rauchg"}
                    >
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img__d1Jia)}
                        role={"img"}
                        src={image8RHFnjvM8TjXQb}
                      />
                    </Suggestion>
                  </React.Fragment>
                }
              >
                {"Who to follow"}
              </SideSection>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.box__u9AIg)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box___1Lleh)}
                >
                  <a
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.link__wkVUl
                    )}
                  >
                    {"Terms"}
                  </a>

                  <a
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.link___3MYtf
                    )}
                  >
                    {"Privacy policy"}
                  </a>

                  <a
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.link__nY9PW
                    )}
                  >
                    {"Cookies"}
                  </a>

                  <a
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.link___8GMx
                    )}
                  >
                    {"Ads info"}
                  </a>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box___00Lg)}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__iOaU7
                    )}
                  >
                    {"© 2021 Twitter, Inc."}
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          ) : null}
          {(hasVariant(globalVariants, "screen", "desktop") ? false : true) ? (
            <div className={classNames(defaultcss.all, sty.box__dIqpV)}>
              <ActionButton
                className={classNames(
                  "__wab_instance",
                  sty.actionButton__vllMo
                )}
                options={["medium", "primary"]}
                slot={"25"}
              >
                <HomeActiveIcon
                  className={classNames(defaultcss.all, sty.svg__jNmJt)}
                  role={"img"}
                />
              </ActionButton>

              <ActionButton
                className={classNames(
                  "__wab_instance",
                  sty.actionButton__kmEyV
                )}
                options={["medium"]}
                slot={"25"}
              >
                <SearchIcon
                  className={classNames(defaultcss.all, sty.svg__dp2PD)}
                  role={"img"}
                />
              </ActionButton>

              <ActionButton
                className={classNames(
                  "__wab_instance",
                  sty.actionButton__m2R7O
                )}
                options={["medium"]}
                slot={"25"}
              >
                <NotificationsIcon
                  className={classNames(defaultcss.all, sty.svg___6YfrP)}
                  role={"img"}
                />
              </ActionButton>

              <ActionButton
                className={classNames(
                  "__wab_instance",
                  sty.actionButton__bNjWx
                )}
                options={["medium"]}
                slot={"25"}
              >
                <MessagesIcon
                  className={classNames(defaultcss.all, sty.svg__zfuW1)}
                  role={"img"}
                />
              </ActionButton>
            </div>
          ) : null}
          {false ? (
            <img
              alt={""}
              className={classNames(defaultcss.img, sty.img__bwxCa)}
              role={"img"}
              src={imageW6YyZgUxZLe1P}
            />
          ) : null}
        </p.Stack>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "avatar", "textarea", "button", "textbox"],
  avatar: ["avatar"],
  textarea: ["textarea"],
  button: ["button"],
  textbox: ["textbox"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicFeed__ArgProps,
      internalVariantPropNames: PlasmicFeed__VariantProps
    });

    return PlasmicFeed__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFeed";
  } else {
    func.displayName = `PlasmicFeed.${nodeName}`;
  }
  return func;
}

export const PlasmicFeed = Object.assign(
  // Top-level PlasmicFeed renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    avatar: makeNodeComponent("avatar"),
    textarea: makeNodeComponent("textarea"),
    button: makeNodeComponent("button"),
    textbox: makeNodeComponent("textbox"),
    // Metadata about props expected for PlasmicFeed
    internalVariantProps: PlasmicFeed__VariantProps,
    internalArgProps: PlasmicFeed__ArgProps
  }
);

export default PlasmicFeed;
/* prettier-ignore-end */
