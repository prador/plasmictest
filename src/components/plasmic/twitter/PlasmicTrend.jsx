// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: v3r5FjeHwUDiayAfitwffE
// Component: WuNoJCHhbEyBYe
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_twitter.module.css"; // plasmic-import: v3r5FjeHwUDiayAfitwffE/projectcss
import * as sty from "./PlasmicTrend.module.css"; // plasmic-import: WuNoJCHhbEyBYe/css

export const PlasmicTrend__VariantProps = new Array();

export const PlasmicTrend__ArgProps = new Array("children", "slot");

function PlasmicTrend__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <p.Stack
      as={"a"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <p.Stack
        as={"div"}
        hasGap={true}
        className={classNames(defaultcss.all, sty.box__pbIJh)}
      >
        <p.PlasmicSlot
          defaultContents={"Entertainment"}
          value={args.slot}
          className={classNames(sty.slotSlot)}
        />

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.box__bljGh
          )}
        >
          {"·"}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.box___0Ud41
          )}
        >
          {"Yesterday"}
        </div>
      </p.Stack>

      <div className={classNames(defaultcss.all, sty.box__bMbns)}>
        <div className={classNames(defaultcss.all, sty.box__i9VNs)}>
          <p.PlasmicSlot
            defaultContents={
              "Adele shares photo supporting Beyoncé's Black is King"
            }
            value={args.children}
            className={classNames(sty.slotChildren)}
          />
        </div>
      </div>
    </p.Stack>
  );
}

const PlasmicDescendants = {
  root: ["root"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicTrend__ArgProps,
      internalVariantPropNames: PlasmicTrend__VariantProps
    });

    return PlasmicTrend__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicTrend";
  } else {
    func.displayName = `PlasmicTrend.${nodeName}`;
  }
  return func;
}

export const PlasmicTrend = Object.assign(
  // Top-level PlasmicTrend renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    // Metadata about props expected for PlasmicTrend
    internalVariantProps: PlasmicTrend__VariantProps,
    internalArgProps: PlasmicTrend__ArgProps
  }
);

export default PlasmicTrend;
/* prettier-ignore-end */
