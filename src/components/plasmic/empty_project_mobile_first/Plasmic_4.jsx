// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: o1vPdgLXqG8oxG6Tov2xRt
// Component: MMc2uRA08S
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_empty_project_mobile_first.module.css"; // plasmic-import: o1vPdgLXqG8oxG6Tov2xRt/projectcss
import * as sty from "./Plasmic_4.module.css"; // plasmic-import: MMc2uRA08S/css
import BaseFabExtendedAtomsDiamondIcon from "./icons/PlasmicIcon__BaseFabExtendedAtomsDiamond"; // plasmic-import: mlbS78wvC-2/icon
import Surface2Icon from "./icons/PlasmicIcon__Surface2"; // plasmic-import: ryQ88YyF05jl/icon
import MaskIcon from "./icons/PlasmicIcon__Mask"; // plasmic-import: PW6nB-ZdXb6/icon

export const Plasmic_4__VariantProps = new Array();

export const Plasmic_4__ArgProps = new Array();

function Plasmic_4__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <React.Fragment>
      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"iPhone847"}
            data-plasmic-override={overrides.iPhone847}
            className={classNames(defaultcss.all, sty.iPhone847)}
          >
            {false ? (
              <div
                data-plasmic-name={"icons7"}
                data-plasmic-override={overrides.icons7}
                className={classNames(defaultcss.all, sty.icons7)}
              >
                <div
                  data-plasmic-name={"overflow7"}
                  data-plasmic-override={overrides.overflow7}
                  className={classNames(defaultcss.all, sty.overflow7)}
                />

                <div
                  data-plasmic-name={"icon37"}
                  data-plasmic-override={overrides.icon37}
                  className={classNames(defaultcss.all, sty.icon37)}
                />

                <div
                  data-plasmic-name={"icon27"}
                  data-plasmic-override={overrides.icon27}
                  className={classNames(defaultcss.all, sty.icon27)}
                />

                <div
                  data-plasmic-name={"icon17"}
                  data-plasmic-override={overrides.icon17}
                  className={classNames(defaultcss.all, sty.icon17)}
                />
              </div>
            ) : null}

            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__nuJw
              )}
            >
              {"Listening to what you need"}
            </div>

            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__qbV2
              )}
            >
              {
                "Share what troubles you and we will build a personalized self-care journey for you, with you."
              }
            </div>

            <a
              data-plasmic-name={"buttons9"}
              data-plasmic-override={overrides.buttons9}
              className={classNames(defaultcss.all, sty.buttons9)}
              href={"/5"}
            >
              <div
                data-plasmic-name={"baseFabExtendedFabExtendedMasterShape8"}
                data-plasmic-override={
                  overrides.baseFabExtendedFabExtendedMasterShape8
                }
                className={classNames(
                  defaultcss.all,
                  sty.baseFabExtendedFabExtendedMasterShape8
                )}
              >
                {false ? (
                  <div
                    data-plasmic-name={"baseFabExtendedAtomsSquircle8"}
                    data-plasmic-override={
                      overrides.baseFabExtendedAtomsSquircle8
                    }
                    className={classNames(
                      defaultcss.all,
                      sty.baseFabExtendedAtomsSquircle8
                    )}
                  >
                    <div
                      data-plasmic-name={"baseSurfaceShapeAtomsSquare8"}
                      data-plasmic-override={
                        overrides.baseSurfaceShapeAtomsSquare8
                      }
                      className={classNames(
                        defaultcss.all,
                        sty.baseSurfaceShapeAtomsSquare8
                      )}
                    >
                      <div
                        data-plasmic-name={"rectangle24"}
                        data-plasmic-override={overrides.rectangle24}
                        className={classNames(defaultcss.all, sty.rectangle24)}
                      />
                    </div>
                  </div>
                ) : null}
                {false ? (
                  <BaseFabExtendedAtomsDiamondIcon
                    className={classNames(defaultcss.all, sty.svg__c8Vrs)}
                    role={"img"}
                  />
                ) : null}

                <div
                  data-plasmic-name={"baseFabExtendedAtomsCircle9"}
                  data-plasmic-override={overrides.baseFabExtendedAtomsCircle9}
                  className={classNames(
                    defaultcss.all,
                    sty.baseFabExtendedAtomsCircle9
                  )}
                >
                  <div
                    data-plasmic-name={"rectangle25"}
                    data-plasmic-override={overrides.rectangle25}
                    className={classNames(defaultcss.all, sty.rectangle25)}
                  />
                </div>
              </div>

              <div
                data-plasmic-name={"label9"}
                data-plasmic-override={overrides.label9}
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.label9
                )}
              >
                {"Next"}
              </div>
            </a>

            <p.Stack
              as={"div"}
              data-plasmic-name={"group44"}
              data-plasmic-override={overrides.group44}
              hasGap={true}
              className={classNames(defaultcss.all, sty.group44)}
            >
              <div
                data-plasmic-name={"group42"}
                data-plasmic-override={overrides.group42}
                className={classNames(defaultcss.all, sty.group42)}
              />

              <div
                data-plasmic-name={"frame1"}
                data-plasmic-override={overrides.frame1}
                className={classNames(defaultcss.all, sty.frame1)}
              />

              <div
                data-plasmic-name={"frame2"}
                data-plasmic-override={overrides.frame2}
                className={classNames(defaultcss.all, sty.frame2)}
              />
            </p.Stack>

            <a
              data-plasmic-name={"buttons10"}
              data-plasmic-override={overrides.buttons10}
              className={classNames(defaultcss.all, sty.buttons10)}
              href={"/6"}
            >
              <Surface2Icon
                className={classNames(defaultcss.all, sty.svg__gao2)}
                role={"img"}
              />

              <div
                data-plasmic-name={"label10"}
                data-plasmic-override={overrides.label10}
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.label10
                )}
              >
                {"Skip"}
              </div>
            </a>

            <div
              data-plasmic-name={"image12"}
              data-plasmic-override={overrides.image12}
              className={classNames(defaultcss.all, sty.image12)}
            />

            {false ? (
              <div
                data-plasmic-name={"ωAtomsSystemBarDark7"}
                data-plasmic-override={overrides.ωAtomsSystemBarDark7}
                className={classNames(defaultcss.all, sty.ωAtomsSystemBarDark7)}
              >
                <div
                  data-plasmic-name={"rectangle26"}
                  data-plasmic-override={overrides.rectangle26}
                  className={classNames(defaultcss.all, sty.rectangle26)}
                />

                <MaskIcon
                  className={classNames(defaultcss.all, sty.svg___5QqLu)}
                  role={"img"}
                />
              </div>
            ) : null}
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "iPhone847",
    "icons7",
    "overflow7",
    "icon37",
    "icon27",
    "icon17",
    "buttons9",
    "baseFabExtendedFabExtendedMasterShape8",
    "baseFabExtendedAtomsSquircle8",
    "baseSurfaceShapeAtomsSquare8",
    "rectangle24",
    "baseFabExtendedAtomsCircle9",
    "rectangle25",
    "label9",
    "group44",
    "group42",
    "frame1",
    "frame2",
    "buttons10",
    "label10",
    "image12",
    "ωAtomsSystemBarDark7",
    "rectangle26"
  ],

  iPhone847: [
    "iPhone847",
    "icons7",
    "overflow7",
    "icon37",
    "icon27",
    "icon17",
    "buttons9",
    "baseFabExtendedFabExtendedMasterShape8",
    "baseFabExtendedAtomsSquircle8",
    "baseSurfaceShapeAtomsSquare8",
    "rectangle24",
    "baseFabExtendedAtomsCircle9",
    "rectangle25",
    "label9",
    "group44",
    "group42",
    "frame1",
    "frame2",
    "buttons10",
    "label10",
    "image12",
    "ωAtomsSystemBarDark7",
    "rectangle26"
  ],

  icons7: ["icons7", "overflow7", "icon37", "icon27", "icon17"],
  overflow7: ["overflow7"],
  icon37: ["icon37"],
  icon27: ["icon27"],
  icon17: ["icon17"],
  buttons9: [
    "buttons9",
    "baseFabExtendedFabExtendedMasterShape8",
    "baseFabExtendedAtomsSquircle8",
    "baseSurfaceShapeAtomsSquare8",
    "rectangle24",
    "baseFabExtendedAtomsCircle9",
    "rectangle25",
    "label9"
  ],

  baseFabExtendedFabExtendedMasterShape8: [
    "baseFabExtendedFabExtendedMasterShape8",
    "baseFabExtendedAtomsSquircle8",
    "baseSurfaceShapeAtomsSquare8",
    "rectangle24",
    "baseFabExtendedAtomsCircle9",
    "rectangle25"
  ],

  baseFabExtendedAtomsSquircle8: [
    "baseFabExtendedAtomsSquircle8",
    "baseSurfaceShapeAtomsSquare8",
    "rectangle24"
  ],

  baseSurfaceShapeAtomsSquare8: ["baseSurfaceShapeAtomsSquare8", "rectangle24"],
  rectangle24: ["rectangle24"],
  baseFabExtendedAtomsCircle9: ["baseFabExtendedAtomsCircle9", "rectangle25"],
  rectangle25: ["rectangle25"],
  label9: ["label9"],
  group44: ["group44", "group42", "frame1", "frame2"],
  group42: ["group42"],
  frame1: ["frame1"],
  frame2: ["frame2"],
  buttons10: ["buttons10", "label10"],
  label10: ["label10"],
  image12: ["image12"],
  ωAtomsSystemBarDark7: ["ωAtomsSystemBarDark7", "rectangle26"],
  rectangle26: ["rectangle26"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: Plasmic_4__ArgProps,
      internalVariantPropNames: Plasmic_4__VariantProps
    });

    return Plasmic_4__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "Plasmic_4";
  } else {
    func.displayName = `Plasmic_4.${nodeName}`;
  }
  return func;
}

export const Plasmic_4 = Object.assign(
  // Top-level Plasmic_4 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    iPhone847: makeNodeComponent("iPhone847"),
    icons7: makeNodeComponent("icons7"),
    overflow7: makeNodeComponent("overflow7"),
    icon37: makeNodeComponent("icon37"),
    icon27: makeNodeComponent("icon27"),
    icon17: makeNodeComponent("icon17"),
    buttons9: makeNodeComponent("buttons9"),
    baseFabExtendedFabExtendedMasterShape8: makeNodeComponent(
      "baseFabExtendedFabExtendedMasterShape8"
    ),

    baseFabExtendedAtomsSquircle8: makeNodeComponent(
      "baseFabExtendedAtomsSquircle8"
    ),

    baseSurfaceShapeAtomsSquare8: makeNodeComponent(
      "baseSurfaceShapeAtomsSquare8"
    ),

    rectangle24: makeNodeComponent("rectangle24"),
    baseFabExtendedAtomsCircle9: makeNodeComponent(
      "baseFabExtendedAtomsCircle9"
    ),

    rectangle25: makeNodeComponent("rectangle25"),
    label9: makeNodeComponent("label9"),
    group44: makeNodeComponent("group44"),
    group42: makeNodeComponent("group42"),
    frame1: makeNodeComponent("frame1"),
    frame2: makeNodeComponent("frame2"),
    buttons10: makeNodeComponent("buttons10"),
    label10: makeNodeComponent("label10"),
    image12: makeNodeComponent("image12"),
    ωAtomsSystemBarDark7: makeNodeComponent("ωAtomsSystemBarDark7"),
    rectangle26: makeNodeComponent("rectangle26"),
    // Metadata about props expected for Plasmic_4
    internalVariantProps: Plasmic_4__VariantProps,
    internalArgProps: Plasmic_4__ArgProps
  }
);

export default Plasmic_4;
/* prettier-ignore-end */
