// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: o1vPdgLXqG8oxG6Tov2xRt
// Component: 3NuCNghreg
import * as React from "react";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_empty_project_mobile_first.module.css"; // plasmic-import: o1vPdgLXqG8oxG6Tov2xRt/projectcss
import * as sty from "./Plasmic_9.module.css"; // plasmic-import: 3NuCNghreg/css
import BaseFabExtendedAtomsDiamondIcon from "./icons/PlasmicIcon__BaseFabExtendedAtomsDiamond"; // plasmic-import: mlbS78wvC-2/icon
import MaskIcon from "./icons/PlasmicIcon__Mask"; // plasmic-import: PW6nB-ZdXb6/icon

export const Plasmic_9__VariantProps = new Array();

export const Plasmic_9__ArgProps = new Array();

function Plasmic_9__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <React.Fragment>
      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"iPhone850"}
            data-plasmic-override={overrides.iPhone850}
            className={classNames(defaultcss.all, sty.iPhone850)}
          >
            {false ? (
              <div
                data-plasmic-name={"icons10"}
                data-plasmic-override={overrides.icons10}
                className={classNames(defaultcss.all, sty.icons10)}
              >
                <div
                  data-plasmic-name={"overflow10"}
                  data-plasmic-override={overrides.overflow10}
                  className={classNames(defaultcss.all, sty.overflow10)}
                />

                <div
                  data-plasmic-name={"icon310"}
                  data-plasmic-override={overrides.icon310}
                  className={classNames(defaultcss.all, sty.icon310)}
                />

                <div
                  data-plasmic-name={"icon210"}
                  data-plasmic-override={overrides.icon210}
                  className={classNames(defaultcss.all, sty.icon210)}
                />

                <div
                  data-plasmic-name={"icon110"}
                  data-plasmic-override={overrides.icon110}
                  className={classNames(defaultcss.all, sty.icon110)}
                />
              </div>
            ) : null}

            <div
              data-plasmic-name={"box"}
              data-plasmic-override={overrides.box}
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box
              )}
            >
              {"What should we \ncall you?"}
            </div>

            <button
              data-plasmic-name={"buttons15"}
              data-plasmic-override={overrides.buttons15}
              className={classNames(defaultcss.button, sty.buttons15)}
            >
              <div
                data-plasmic-name={"baseFabExtendedFabExtendedMasterShape12"}
                data-plasmic-override={
                  overrides.baseFabExtendedFabExtendedMasterShape12
                }
                className={classNames(
                  defaultcss.all,
                  sty.baseFabExtendedFabExtendedMasterShape12
                )}
              >
                {false ? (
                  <div
                    data-plasmic-name={"baseFabExtendedAtomsSquircle12"}
                    data-plasmic-override={
                      overrides.baseFabExtendedAtomsSquircle12
                    }
                    className={classNames(
                      defaultcss.all,
                      sty.baseFabExtendedAtomsSquircle12
                    )}
                  >
                    <div
                      data-plasmic-name={"baseSurfaceShapeAtomsSquare12"}
                      data-plasmic-override={
                        overrides.baseSurfaceShapeAtomsSquare12
                      }
                      className={classNames(
                        defaultcss.all,
                        sty.baseSurfaceShapeAtomsSquare12
                      )}
                    >
                      <div
                        data-plasmic-name={"rectangle35"}
                        data-plasmic-override={overrides.rectangle35}
                        className={classNames(defaultcss.all, sty.rectangle35)}
                      />
                    </div>
                  </div>
                ) : null}
                {false ? (
                  <BaseFabExtendedAtomsDiamondIcon
                    className={classNames(defaultcss.all, sty.svg__z1Ty4)}
                    role={"img"}
                  />
                ) : null}

                <div
                  data-plasmic-name={"baseFabExtendedAtomsCircle13"}
                  data-plasmic-override={overrides.baseFabExtendedAtomsCircle13}
                  className={classNames(
                    defaultcss.all,
                    sty.baseFabExtendedAtomsCircle13
                  )}
                >
                  <div
                    data-plasmic-name={"rectangle36"}
                    data-plasmic-override={overrides.rectangle36}
                    className={classNames(defaultcss.all, sty.rectangle36)}
                  />
                </div>
              </div>

              <div
                data-plasmic-name={"label15"}
                data-plasmic-override={overrides.label15}
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.label15
                )}
              >
                {"proceed"}
              </div>
            </button>

            <div
              data-plasmic-name={"iconBack4"}
              data-plasmic-override={overrides.iconBack4}
              className={classNames(defaultcss.all, sty.iconBack4)}
            >
              <div
                data-plasmic-name={"icroundKeyboardBackspace4"}
                data-plasmic-override={overrides.icroundKeyboardBackspace4}
                className={classNames(
                  defaultcss.all,
                  sty.icroundKeyboardBackspace4
                )}
              />
            </div>

            <div
              data-plasmic-name={"textFieldOutlined"}
              data-plasmic-override={overrides.textFieldOutlined}
              className={classNames(defaultcss.all, sty.textFieldOutlined)}
            >
              <div
                data-plasmic-name={"formShape"}
                data-plasmic-override={overrides.formShape}
                className={classNames(defaultcss.all, sty.formShape)}
              >
                {false ? (
                  <div
                    data-plasmic-name={"baseSurfaceShapeAtomsDiamond"}
                    data-plasmic-override={
                      overrides.baseSurfaceShapeAtomsDiamond
                    }
                    className={classNames(
                      defaultcss.all,
                      sty.baseSurfaceShapeAtomsDiamond
                    )}
                  />
                ) : null}

                <div
                  data-plasmic-name={"baseSurfaceShapeAtomsSquare13"}
                  data-plasmic-override={
                    overrides.baseSurfaceShapeAtomsSquare13
                  }
                  className={classNames(
                    defaultcss.all,
                    sty.baseSurfaceShapeAtomsSquare13
                  )}
                >
                  <form
                    data-plasmic-name={"rectangle37"}
                    data-plasmic-override={overrides.rectangle37}
                    className={classNames(defaultcss.all, sty.rectangle37)}
                  />
                </div>
              </div>

              {false ? (
                <div
                  data-plasmic-name={"assistiveText"}
                  data-plasmic-override={overrides.assistiveText}
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.assistiveText
                  )}
                >
                  {"*Required"}
                </div>
              ) : null}
              {false ? (
                <div
                  data-plasmic-name={"trailingIcon"}
                  data-plasmic-override={overrides.trailingIcon}
                  className={classNames(defaultcss.all, sty.trailingIcon)}
                />
              ) : null}

              <div
                data-plasmic-name={"input"}
                data-plasmic-override={overrides.input}
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.input
                )}
              >
                {"Name"}
              </div>
            </div>

            {false ? (
              <div
                data-plasmic-name={"ωAtomsSystemBarDark10"}
                data-plasmic-override={overrides.ωAtomsSystemBarDark10}
                className={classNames(
                  defaultcss.all,
                  sty.ωAtomsSystemBarDark10
                )}
              >
                <div
                  data-plasmic-name={"rectangle38"}
                  data-plasmic-override={overrides.rectangle38}
                  className={classNames(defaultcss.all, sty.rectangle38)}
                />

                <MaskIcon
                  className={classNames(defaultcss.all, sty.svg__iTz6M)}
                  role={"img"}
                />
              </div>
            ) : null}
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "iPhone850",
    "icons10",
    "overflow10",
    "icon310",
    "icon210",
    "icon110",
    "box",
    "buttons15",
    "baseFabExtendedFabExtendedMasterShape12",
    "baseFabExtendedAtomsSquircle12",
    "baseSurfaceShapeAtomsSquare12",
    "rectangle35",
    "baseFabExtendedAtomsCircle13",
    "rectangle36",
    "label15",
    "iconBack4",
    "icroundKeyboardBackspace4",
    "textFieldOutlined",
    "formShape",
    "baseSurfaceShapeAtomsDiamond",
    "baseSurfaceShapeAtomsSquare13",
    "rectangle37",
    "assistiveText",
    "trailingIcon",
    "input",
    "ωAtomsSystemBarDark10",
    "rectangle38"
  ],

  iPhone850: [
    "iPhone850",
    "icons10",
    "overflow10",
    "icon310",
    "icon210",
    "icon110",
    "box",
    "buttons15",
    "baseFabExtendedFabExtendedMasterShape12",
    "baseFabExtendedAtomsSquircle12",
    "baseSurfaceShapeAtomsSquare12",
    "rectangle35",
    "baseFabExtendedAtomsCircle13",
    "rectangle36",
    "label15",
    "iconBack4",
    "icroundKeyboardBackspace4",
    "textFieldOutlined",
    "formShape",
    "baseSurfaceShapeAtomsDiamond",
    "baseSurfaceShapeAtomsSquare13",
    "rectangle37",
    "assistiveText",
    "trailingIcon",
    "input",
    "ωAtomsSystemBarDark10",
    "rectangle38"
  ],

  icons10: ["icons10", "overflow10", "icon310", "icon210", "icon110"],
  overflow10: ["overflow10"],
  icon310: ["icon310"],
  icon210: ["icon210"],
  icon110: ["icon110"],
  box: ["box"],
  buttons15: [
    "buttons15",
    "baseFabExtendedFabExtendedMasterShape12",
    "baseFabExtendedAtomsSquircle12",
    "baseSurfaceShapeAtomsSquare12",
    "rectangle35",
    "baseFabExtendedAtomsCircle13",
    "rectangle36",
    "label15"
  ],

  baseFabExtendedFabExtendedMasterShape12: [
    "baseFabExtendedFabExtendedMasterShape12",
    "baseFabExtendedAtomsSquircle12",
    "baseSurfaceShapeAtomsSquare12",
    "rectangle35",
    "baseFabExtendedAtomsCircle13",
    "rectangle36"
  ],

  baseFabExtendedAtomsSquircle12: [
    "baseFabExtendedAtomsSquircle12",
    "baseSurfaceShapeAtomsSquare12",
    "rectangle35"
  ],

  baseSurfaceShapeAtomsSquare12: [
    "baseSurfaceShapeAtomsSquare12",
    "rectangle35"
  ],

  rectangle35: ["rectangle35"],
  baseFabExtendedAtomsCircle13: ["baseFabExtendedAtomsCircle13", "rectangle36"],
  rectangle36: ["rectangle36"],
  label15: ["label15"],
  iconBack4: ["iconBack4", "icroundKeyboardBackspace4"],
  icroundKeyboardBackspace4: ["icroundKeyboardBackspace4"],
  textFieldOutlined: [
    "textFieldOutlined",
    "formShape",
    "baseSurfaceShapeAtomsDiamond",
    "baseSurfaceShapeAtomsSquare13",
    "rectangle37",
    "assistiveText",
    "trailingIcon",
    "input"
  ],

  formShape: [
    "formShape",
    "baseSurfaceShapeAtomsDiamond",
    "baseSurfaceShapeAtomsSquare13",
    "rectangle37"
  ],

  baseSurfaceShapeAtomsDiamond: ["baseSurfaceShapeAtomsDiamond"],
  baseSurfaceShapeAtomsSquare13: [
    "baseSurfaceShapeAtomsSquare13",
    "rectangle37"
  ],

  rectangle37: ["rectangle37"],
  assistiveText: ["assistiveText"],
  trailingIcon: ["trailingIcon"],
  input: ["input"],
  ωAtomsSystemBarDark10: ["ωAtomsSystemBarDark10", "rectangle38"],
  rectangle38: ["rectangle38"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: Plasmic_9__ArgProps,
      internalVariantPropNames: Plasmic_9__VariantProps
    });

    return Plasmic_9__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "Plasmic_9";
  } else {
    func.displayName = `Plasmic_9.${nodeName}`;
  }
  return func;
}

export const Plasmic_9 = Object.assign(
  // Top-level Plasmic_9 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    iPhone850: makeNodeComponent("iPhone850"),
    icons10: makeNodeComponent("icons10"),
    overflow10: makeNodeComponent("overflow10"),
    icon310: makeNodeComponent("icon310"),
    icon210: makeNodeComponent("icon210"),
    icon110: makeNodeComponent("icon110"),
    box: makeNodeComponent("box"),
    buttons15: makeNodeComponent("buttons15"),
    baseFabExtendedFabExtendedMasterShape12: makeNodeComponent(
      "baseFabExtendedFabExtendedMasterShape12"
    ),

    baseFabExtendedAtomsSquircle12: makeNodeComponent(
      "baseFabExtendedAtomsSquircle12"
    ),

    baseSurfaceShapeAtomsSquare12: makeNodeComponent(
      "baseSurfaceShapeAtomsSquare12"
    ),

    rectangle35: makeNodeComponent("rectangle35"),
    baseFabExtendedAtomsCircle13: makeNodeComponent(
      "baseFabExtendedAtomsCircle13"
    ),

    rectangle36: makeNodeComponent("rectangle36"),
    label15: makeNodeComponent("label15"),
    iconBack4: makeNodeComponent("iconBack4"),
    icroundKeyboardBackspace4: makeNodeComponent("icroundKeyboardBackspace4"),
    textFieldOutlined: makeNodeComponent("textFieldOutlined"),
    formShape: makeNodeComponent("formShape"),
    baseSurfaceShapeAtomsDiamond: makeNodeComponent(
      "baseSurfaceShapeAtomsDiamond"
    ),

    baseSurfaceShapeAtomsSquare13: makeNodeComponent(
      "baseSurfaceShapeAtomsSquare13"
    ),

    rectangle37: makeNodeComponent("rectangle37"),
    assistiveText: makeNodeComponent("assistiveText"),
    trailingIcon: makeNodeComponent("trailingIcon"),
    input: makeNodeComponent("input"),
    ωAtomsSystemBarDark10: makeNodeComponent("ωAtomsSystemBarDark10"),
    rectangle38: makeNodeComponent("rectangle38"),
    // Metadata about props expected for Plasmic_9
    internalVariantProps: Plasmic_9__VariantProps,
    internalArgProps: Plasmic_9__ArgProps
  }
);

export default Plasmic_9;
/* prettier-ignore-end */
